<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java反射</title>
      <link href="/2023/04/07/java%E5%8F%8D%E5%B0%84/"/>
      <url>/2023/04/07/java%E5%8F%8D%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<ol><li>根据对象名获取对象的类</li><li>根据对象的方法名获取方法</li><li>根据第一步得到的类获得对应的构造器</li><li>根据第三步获得的构造器构造对象</li><li>根据第二步得到的方法操作第4步的对象</li></ol><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">package com;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.Constructor;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line">/**</span><br><span class="line"> * @author wzw</span><br><span class="line"> * @date 2022/4/12 14:47</span><br><span class="line"> */</span><br><span class="line">public class Apple &#123;</span><br><span class="line"></span><br><span class="line">    private int price;</span><br><span class="line"></span><br><span class="line">    public int getPrice() &#123;</span><br><span class="line">        return price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPrice(int price) &#123;</span><br><span class="line">        this.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception&#123;</span><br><span class="line"></span><br><span class="line">        //正常的调用</span><br><span class="line">        Apple apple = new Apple();</span><br><span class="line"></span><br><span class="line">        apple.setPrice(5);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;Apple Price:&quot; + apple.getPrice());</span><br><span class="line"></span><br><span class="line">        //使用反射调用</span><br><span class="line">        Class clz = Class.forName(&quot;com.Apple&quot;);</span><br><span class="line">        Method setPriceMethod = clz.getMethod(&quot;setPrice&quot;, int.class);</span><br><span class="line">        Constructor appleConstructor = clz.getConstructor();</span><br><span class="line">        Object appleObj = appleConstructor.newInstance();</span><br><span class="line">        setPriceMethod.invoke(appleObj, 14);</span><br><span class="line">        Method getPriceMethod = clz.getMethod(&quot;getPrice&quot;);</span><br><span class="line">        System.out.println(&quot;Apple Price:&quot; + getPriceMethod.invoke(appleObj));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ajax笔记</title>
      <link href="/2023/02/15/ajax%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/02/15/ajax%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="express框架"><a href="#express框架" class="headerlink" title="express框架"></a>express框架</h3><h4 id="express的基本使用"><a href="#express的基本使用" class="headerlink" title="express的基本使用"></a>express的基本使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 1. 引入express</span><br><span class="line">const express = require(&#x27;express&#x27;);</span><br><span class="line"></span><br><span class="line">// 2.创建应用对象</span><br><span class="line">const app = express();</span><br><span class="line"></span><br><span class="line">// 3.创建路由规则</span><br><span class="line">// request是对请求报文的封装</span><br><span class="line">// response是对响应报文的封装</span><br><span class="line">app.get(&#x27;/&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    response.send(&#x27;HELLO EXPRESS&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 4.监听端口启动服务</span><br><span class="line">app.listen(8080, () =&gt; &#123;</span><br><span class="line">    console.log(&quot;服务已经启动，8080端口监听中...&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="server-js-文件-服务端"><a href="#server-js-文件-服务端" class="headerlink" title="server.js 文件  服务端"></a>server.js 文件  服务端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">// 1. 引入express</span><br><span class="line">const express = require(&#x27;express&#x27;);</span><br><span class="line"></span><br><span class="line">// 2.创建应用对象</span><br><span class="line">const app = express();</span><br><span class="line"></span><br><span class="line">// 3.创建路由规则</span><br><span class="line">// request是对请求报文的封装</span><br><span class="line">// response是对响应报文的封装</span><br><span class="line">app.get(&#x27;/server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    //设置响应体</span><br><span class="line">    response.send(&#x27;HELLO AJAX -2&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.all(&#x27;/server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;*&#x27;);</span><br><span class="line">    //设置响应体</span><br><span class="line">    response.send(&#x27;HELLO AJAX ALL&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">app.all(&#x27;/json-server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;*&#x27;);</span><br><span class="line"></span><br><span class="line">    //响应一个数据</span><br><span class="line">    const data = &#123;</span><br><span class="line">        name: &#x27;zhangsan&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    let str = JSON.stringify(data);</span><br><span class="line"></span><br><span class="line">    //设置响应体</span><br><span class="line">    response.send(str);</span><br><span class="line">    // response.send(&#x27;HELLO AJAX JSON&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//针对IE缓存</span><br><span class="line">app.get(&#x27;/ie&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    //设置响应体</span><br><span class="line">    response.send(&#x27;HELLO IE&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">// 延迟返回</span><br><span class="line">app.all(&#x27;/delay&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;*&#x27;);</span><br><span class="line"></span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">        //设置响应体</span><br><span class="line">        response.send(&#x27;HELLO IE&#x27;);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">&#125;);</span><br><span class="line">// jQuery 服务</span><br><span class="line">app.all(&#x27;/jquery-server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;*&#x27;);</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    //设置响应体</span><br><span class="line">    // response.send(&#x27;HELLO jquery AJAX&#x27;);</span><br><span class="line">    const data = &#123; name: &#x27;尚硅谷&#x27; &#125;;</span><br><span class="line">    response.send(JSON.stringify(data));</span><br><span class="line">&#125;);</span><br><span class="line">// axios 服务</span><br><span class="line">app.all(&#x27;/axios-server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;*&#x27;);</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    //设置响应体</span><br><span class="line">    // response.send(&#x27;HELLO jquery AJAX&#x27;);</span><br><span class="line">    const data = &#123; name: &#x27;尚硅谷&#x27; &#125;;</span><br><span class="line">    response.send(JSON.stringify(data));</span><br><span class="line">&#125;);</span><br><span class="line">// fetch 服务</span><br><span class="line">app.all(&#x27;/fetch-server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Headers&#x27;, &#x27;*&#x27;);</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    //设置响应体</span><br><span class="line">    // response.send(&#x27;HELLO jquery AJAX&#x27;);</span><br><span class="line">    const data = &#123; name: &#x27;尚硅谷&#x27; &#125;;</span><br><span class="line">    response.send(JSON.stringify(data));</span><br><span class="line">&#125;);</span><br><span class="line">//jsonp服务</span><br><span class="line">app.all(&#x27;/jsonp-server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">        const data = &#123;</span><br><span class="line">            name: &#x27;尚硅谷&#x27;</span><br><span class="line">        &#125;;</span><br><span class="line">        //将数据转化为字符串</span><br><span class="line">        let str = JSON.stringify(data);</span><br><span class="line">        response.end(`handle($&#123;str&#125;)`)</span><br><span class="line">            // response.send(&#x27;console.log(&quot;hello jsonp&quot;)&#x27;);</span><br><span class="line">    &#125;)</span><br><span class="line">    //用户名检测是否存在</span><br><span class="line">app.all(&#x27;/check-username&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">        const data = &#123;</span><br><span class="line">            exist: 1,</span><br><span class="line">            msg: &#x27;用户名已经存在&#x27;</span><br><span class="line">        &#125;;</span><br><span class="line">        //将数据转化为字符串</span><br><span class="line">        let str = JSON.stringify(data);</span><br><span class="line">        response.end(`handle($&#123;str&#125;)`)</span><br><span class="line">            // response.send(&#x27;console.log(&quot;hello jsonp&quot;)&#x27;);</span><br><span class="line">    &#125;)</span><br><span class="line">    //用户名检测是否存在</span><br><span class="line">app.all(&#x27;/jquery-jsonp-server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    const data = &#123;</span><br><span class="line">        name: &#x27;尚硅谷&#x27;,</span><br><span class="line">        city: [&#x27;北京&#x27;, &#x27;上海&#x27;, &#x27;深圳&#x27;]</span><br><span class="line">    &#125;;</span><br><span class="line">    //将数据转化为字符串</span><br><span class="line">    let str = JSON.stringify(data);</span><br><span class="line">    // 接受callback参数</span><br><span class="line">    let cb = request.query.callback;</span><br><span class="line">    //返回结果</span><br><span class="line">    response.end(`$&#123;cb&#125;($&#123;str&#125;)`)</span><br><span class="line">        // response.send(&#x27;console.log(&quot;hello jsonp&quot;)&#x27;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 4.监听端口启动服务</span><br><span class="line">app.listen(8080, () =&gt; &#123;</span><br><span class="line">    console.log(&quot;服务已经启动，8080端口监听中...&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-原生AJAX"><a href="#3-原生AJAX" class="headerlink" title="3 原生AJAX"></a>3 原生AJAX</h3><h4 id="1-GET-html"><a href="#1-GET-html" class="headerlink" title="1-GET.html"></a>1-GET.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        #result &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: solid 1px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击发送请求&lt;/button&gt;</span><br><span class="line">    &lt;div id=&quot;result&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 获取button元素</span><br><span class="line">        const btn = document.getElementsByTagName(&#x27;button&#x27;)[0];</span><br><span class="line">        const result = document.getElementById(&quot;result&quot;);</span><br><span class="line">        //绑定事件</span><br><span class="line">        btn.onclick = function() &#123;</span><br><span class="line">            //1.创建对象</span><br><span class="line">            const xhr = new XMLHttpRequest();</span><br><span class="line">            //2.初始化 设置请求方法和url</span><br><span class="line">            xhr.open(&#x27;GET&#x27;, &#x27;http://127.0.0.1:8080/server?a=100&amp;b=200&amp;c=300&#x27;);</span><br><span class="line">            // 3.发送</span><br><span class="line">            xhr.send();</span><br><span class="line">            // 4.事件绑定 处理服务端返回的结果</span><br><span class="line">            // on when 当...时候</span><br><span class="line">            // readystate 是 xhr对象中的属性，表示状态</span><br><span class="line">            // change 改变</span><br><span class="line">            xhr.onreadystatechange = function() &#123;</span><br><span class="line">                //判断</span><br><span class="line">                if (xhr.readyState === 4) &#123;</span><br><span class="line">                    //判断响应状态码 200 404 403 401 500</span><br><span class="line">                    //2xx 成功</span><br><span class="line">                    if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) &#123;</span><br><span class="line">                        //处理结果</span><br><span class="line">                        //1. 响应行</span><br><span class="line">                        console.log(xhr.status); //状态码</span><br><span class="line">                        console.log(xhr.statusText); //状态字符串</span><br><span class="line">                        console.log(xhr.getAllResponseHeaders()); //所有响应头</span><br><span class="line">                        console.log(xhr.response); //状态码</span><br><span class="line">                        result.innerHTML = xhr.response;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="2-POST-html"><a href="#2-POST-html" class="headerlink" title="2-POST.html"></a>2-POST.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;result&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 获取元素对象</span><br><span class="line">        const result = document.getElementById(&quot;result&quot;);</span><br><span class="line">        //绑定事件</span><br><span class="line">        result.addEventListener(&quot;mouseover&quot;, function() &#123;</span><br><span class="line">            //1.创建对象</span><br><span class="line">            const xhr = new XMLHttpRequest();</span><br><span class="line">            // 2.初始化 设置类型与URL</span><br><span class="line">            xhr.open(&#x27;POST&#x27;, &#x27;http://127.0.0.1:8080/server&#x27;);</span><br><span class="line">            // 设置请求头</span><br><span class="line">            xhr.setRequestHeader(&#x27;Content-Type&#x27;, &#x27;application/x-www-form-urlencoded&#x27;);</span><br><span class="line">            xhr.setRequestHeader(&#x27;name&#x27;, &#x27;shangGuiGu&#x27;);</span><br><span class="line">            // 3.发送</span><br><span class="line">            xhr.send(&#x27;a=100&amp;b=200&amp;c=300&#x27;);</span><br><span class="line">            // 4.事件绑定</span><br><span class="line">            xhr.onreadystatechange = function() &#123;</span><br><span class="line">                // 判断</span><br><span class="line">                if (xhr.readyState === 4) &#123;</span><br><span class="line">                    if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) &#123;</span><br><span class="line">                        // 处理服务端返回的结果</span><br><span class="line">                        result.innerHTML = xhr.response;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="3-JSON-html"><a href="#3-JSON-html" class="headerlink" title="3-JSON.html"></a>3-JSON.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;result&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const result = document.getElementById(&#x27;result&#x27;);</span><br><span class="line">        //绑定键盘按下事件</span><br><span class="line">        window.onkeydown = function() &#123;</span><br><span class="line">            //发送请求</span><br><span class="line">            const xhr = new XMLHttpRequest();</span><br><span class="line">            //设置响应体的类型</span><br><span class="line">            xhr.responseType = &#x27;json&#x27;;</span><br><span class="line">            //初始化</span><br><span class="line">            xhr.open(&#x27;POST&#x27;, &#x27;http://127.0.0.1:8080/json-server&#x27;);</span><br><span class="line">            //发送</span><br><span class="line">            xhr.send();</span><br><span class="line">            //事件绑定</span><br><span class="line">            xhr.onreadystatechange = function() &#123;</span><br><span class="line">                if (xhr.readyState === 4) &#123;</span><br><span class="line">                    if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) &#123;</span><br><span class="line">                        // console.log(xhr.response);</span><br><span class="line">                        // result.innerHTML = xhr.response;</span><br><span class="line">                        //手动对数据转化</span><br><span class="line">                        // let data = JSON.parse(xhr.response);</span><br><span class="line">                        // console.log(data);</span><br><span class="line">                        // result.innerHTML = data.name;</span><br><span class="line">                        // 自动转化</span><br><span class="line">                        console.log(xhr.response.name);</span><br><span class="line">                        result.innerHTML = xhr.response.name;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="4-IE缓存问题-html"><a href="#4-IE缓存问题-html" class="headerlink" title="4-IE缓存问题.html"></a>4-IE缓存问题.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击发送请求&lt;/button&gt;</span><br><span class="line">    &lt;div id=&quot;result&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const btn = document.getElementsByTagName(&#x27;button&#x27;)[0];</span><br><span class="line">        const result = document.querySelector(&#x27;#result&#x27;);</span><br><span class="line">        btn.addEventListener(&#x27;click&#x27;, function() &#123;</span><br><span class="line">            const xhr = new XMLHttpRequest();</span><br><span class="line">            xhr.open(&quot;GET&quot;, &#x27;http://127.0.0.1:8080/ie?=&#x27; + Date.now());//***</span><br><span class="line">            xhr.send();</span><br><span class="line">            xhr.onreadystatechange = function() &#123;</span><br><span class="line">                if (xhr.readyState === 4) &#123;</span><br><span class="line">                    if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) &#123;</span><br><span class="line">                        result.innerHTML = xhr.response;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="5-超时与网络异常-html"><a href="#5-超时与网络异常-html" class="headerlink" title="5-超时与网络异常.html"></a>5-超时与网络异常.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击发送请求&lt;/button&gt;</span><br><span class="line">    &lt;div id=&quot;result&quot;&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const btn = document.getElementsByTagName(&#x27;button&#x27;)[0];</span><br><span class="line">        const result = document.querySelector(&#x27;#result&#x27;);</span><br><span class="line"></span><br><span class="line">        btn.addEventListener(&#x27;click&#x27;, function() &#123;</span><br><span class="line">            const xhr = new XMLHttpRequest();</span><br><span class="line">            // xhr.timeout = 2000;</span><br><span class="line">            // xhr.ontimeout = function() &#123;</span><br><span class="line">            //     alert(&quot;网络异常，请稍后重试！！！！！&quot;)</span><br><span class="line">            // &#125;;</span><br><span class="line">            // xhr.onerror = function() &#123;</span><br><span class="line">            //     alert(&quot;断网了&quot;);</span><br><span class="line">            // &#125;</span><br><span class="line"></span><br><span class="line">            xhr.open(&quot;GET&quot;, &#x27;http://127.0.0.1:8080/delay&#x27;);</span><br><span class="line">            xhr.send();</span><br><span class="line">            xhr.onreadystatechange = function() &#123;</span><br><span class="line">                if (xhr.readyState === 4) &#123;</span><br><span class="line">                    if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) &#123;</span><br><span class="line">                        result.innerHTML = xhr.response;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="6-取消请求-html"><a href="#6-取消请求-html" class="headerlink" title="6-取消请求.html"></a>6-取消请求.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击发送请求&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;点击发送请求&lt;/button&gt;</span><br><span class="line">    &lt;div id=&quot;result&quot;&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const btns = document.getElementsByTagName(&#x27;button&#x27;);</span><br><span class="line">        const result = document.querySelector(&#x27;#result&#x27;);</span><br><span class="line"></span><br><span class="line">        let x = null;</span><br><span class="line">        let isSending = false;</span><br><span class="line">        btns[0].onclick = function() &#123;</span><br><span class="line">            if (isSending) &#123;</span><br><span class="line">                x.abort();</span><br><span class="line">            &#125;</span><br><span class="line">            x = new XMLHttpRequest();</span><br><span class="line">            isSending = true;</span><br><span class="line">            x.open(&quot;GET&quot;, &#x27;http://127.0.0.1:8080/delay&#x27;);</span><br><span class="line">            x.send();</span><br><span class="line">            x.onreadystatechange = function() &#123;</span><br><span class="line">                if (x.readyState === 4) &#123;</span><br><span class="line">                    isSending = false;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        btns[1].onclick = function() &#123;</span><br><span class="line">            x.abort();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // btn.addEventListener(&#x27;click&#x27;, function() &#123;</span><br><span class="line">        //     const xhr = new XMLHttpRequest();</span><br><span class="line">        //     xhr.open(&quot;GET&quot;, &#x27;http://127.0.0.1:8080/delay&#x27;);</span><br><span class="line">        //     xhr.send();</span><br><span class="line">        //     xhr.onreadystatechange = function() &#123;</span><br><span class="line">        //         if (xhr.readyState === 4) &#123;</span><br><span class="line">        //             if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) &#123;</span><br><span class="line">        //                 result.innerHTML = xhr.response;</span><br><span class="line">        //             &#125;</span><br><span class="line">        //         &#125;</span><br><span class="line">        //     &#125;</span><br><span class="line">        // &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="4-JQuery-AJAX"><a href="#4-JQuery-AJAX" class="headerlink" title="4-JQuery-AJAX"></a>4-JQuery-AJAX</h3><h4 id="client-html"><a href="#client-html" class="headerlink" title="client.html"></a>client.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- &lt;link crossorigin=&quot;anonymous&quot; href=&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap-grid.css&quot; rel=&quot;stylesheet&quot;&gt; --&gt;</span><br><span class="line">    &lt;link crossorigin=&quot;anonymous&quot; href=&quot;../CSS/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</span><br><span class="line">    &lt;script crossorigin=&quot;anonymous&quot; src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.3/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;h2 class=&quot;page-header&quot;&gt;jQuery发送AJAX请求&lt;/h2&gt;</span><br><span class="line">        &lt;button class=&quot;bs primary&quot;&gt;GET&lt;/button&gt;</span><br><span class="line">        &lt;button class=&quot;btn btn-danger&quot;&gt;POST&lt;/button&gt;</span><br><span class="line">        &lt;button class=&quot;btn btn-info&quot;&gt;通用型方法ajax&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(&#x27;button&#x27;).eq(0).click(function() &#123;</span><br><span class="line">            $.get(&#x27;http://127.0.0.1:8080/jquery-server&#x27;, &#123;</span><br><span class="line">                a: 100,</span><br><span class="line">                b: 200</span><br><span class="line">            &#125;, function(data) &#123;</span><br><span class="line">                console.log(data);</span><br><span class="line">            &#125;, &#x27;json&#x27;);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(&#x27;button&#x27;).eq(1).click(function() &#123;</span><br><span class="line">            $.post(&#x27;http://127.0.0.1:8080/jquery-server&#x27;, &#123;</span><br><span class="line">                a: 100,</span><br><span class="line">                b: 200</span><br><span class="line">            &#125;, function(data) &#123;</span><br><span class="line">                console.log(data);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(&#x27;button&#x27;).eq(2).click(function() &#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                //url</span><br><span class="line">                url: &#x27;http://127.0.0.1:8080/jquery-server&#x27;,</span><br><span class="line">                //参数</span><br><span class="line">                data: &#123;</span><br><span class="line">                    a: 100,</span><br><span class="line">                    b: 200</span><br><span class="line">                &#125;,</span><br><span class="line">                //请求类型</span><br><span class="line">                type: &#x27;GET&#x27;,</span><br><span class="line">                //响应体结果</span><br><span class="line">                dataType: &#x27;json&#x27;,</span><br><span class="line">                //成功的回调</span><br><span class="line">                success: function(data) &#123;</span><br><span class="line">                    console.log(data);</span><br><span class="line">                &#125;,</span><br><span class="line">                //超时时间</span><br><span class="line">                timeout: 2000,</span><br><span class="line">                //失败的回调</span><br><span class="line">                error: function() &#123;</span><br><span class="line">                    console.log(&#x27;出错啦&#x27;)</span><br><span class="line">                &#125;,</span><br><span class="line">                Headers: &#123;</span><br><span class="line">                    c: 300,</span><br><span class="line">                    d: 400</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;../JS/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="5-Axios-AJAX"><a href="#5-Axios-AJAX" class="headerlink" title="5-Axios-AJAX"></a>5-Axios-AJAX</h3><h4 id="axios-html"><a href="#axios-html" class="headerlink" title="axios.html"></a>axios.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/axios/1.3.2/axios.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;GET&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;POST&lt;/button&gt;</span><br><span class="line">    &lt;button&gt;AJAX&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const btns = document.querySelectorAll(&#x27;button&#x27;);</span><br><span class="line"></span><br><span class="line">        //配置baseURL</span><br><span class="line">        axios.defaults.baseURL = &#x27;http://127.0.0.1:8080&#x27;;</span><br><span class="line"></span><br><span class="line">        btns[0].onclick = function() &#123;</span><br><span class="line">            axios.get(&#x27;/axios-server&#x27;, &#123;</span><br><span class="line">                //url参数</span><br><span class="line">                params: &#123;</span><br><span class="line">                    id: 100,</span><br><span class="line">                    vip: 7,</span><br><span class="line">                &#125;,</span><br><span class="line">                //请求头信息</span><br><span class="line">                header: &#123;</span><br><span class="line">                    name: &#x27;atguigu&#x27;,</span><br><span class="line">                    age: 20</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).then(value =&gt; &#123;</span><br><span class="line">                console.log(value)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        btns[1].onclick = function() &#123;</span><br><span class="line">            axios.post(&#x27;/axios-server&#x27;, &#123;</span><br><span class="line">                username: &#x27;admin&#x27;,</span><br><span class="line">                password: &#x27;admin&#x27;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                //url</span><br><span class="line">                params: &#123;</span><br><span class="line">                    id: 200,</span><br><span class="line">                    vip: 9</span><br><span class="line">                &#125;,</span><br><span class="line">                //请求头参数</span><br><span class="line">                headers: &#123;</span><br><span class="line">                    height: 200,</span><br><span class="line">                    weight: 200</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        btns[2].onclick = function() &#123;</span><br><span class="line">            axios(&#123;</span><br><span class="line">                //请求方法</span><br><span class="line">                method: &#x27;POST&#x27;,</span><br><span class="line">                //url</span><br><span class="line">                url: &#x27;/axios-server&#x27;,</span><br><span class="line">                //url参数</span><br><span class="line">                params: &#123;</span><br><span class="line">                    vip: 10,</span><br><span class="line">                    level: 30</span><br><span class="line">                &#125;,</span><br><span class="line">                //头信息</span><br><span class="line">                headers: &#123;</span><br><span class="line">                    a: 100,</span><br><span class="line">                    b: 200</span><br><span class="line">                &#125;,</span><br><span class="line">                //请求体参数</span><br><span class="line">                data: &#123;</span><br><span class="line">                    username: &#x27;admin&#x27;,</span><br><span class="line">                    password: &#x27;admin&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).then(response =&gt; &#123;</span><br><span class="line">                // console.log(response);</span><br><span class="line">                //响应状态码</span><br><span class="line">                console.log(response.status);</span><br><span class="line">                //响应状态字符串</span><br><span class="line">                console.log(response.statusText);</span><br><span class="line">                //响应头信息</span><br><span class="line">                console.log(response.headers);</span><br><span class="line">                //响应体</span><br><span class="line">                console.log(response.data);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="6-fetch-AJAX"><a href="#6-fetch-AJAX" class="headerlink" title="6-fetch-AJAX"></a>6-fetch-AJAX</h3><h4 id="fetch-html"><a href="#fetch-html" class="headerlink" title="fetch.html"></a>fetch.html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;fetch 发送 AJAX 请求&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;AJAX请求&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    const btn = document.querySelector(&#x27;button&#x27;);</span><br><span class="line">    btn.onclick = function() &#123;</span><br><span class="line">        fetch(&#x27;http://127.0.0.1:8080/fetch-server?vip=10&#x27;, &#123;</span><br><span class="line">            //请求方法</span><br><span class="line">            method: &#x27;POST&#x27;,</span><br><span class="line">            // 请求头</span><br><span class="line">            headers: &#123;</span><br><span class="line">                name: &#x27;atguigu&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            // 请求体</span><br><span class="line">            body: &#x27;username=admin&amp;password=admin&#x27;</span><br><span class="line">        &#125;).then(response =&gt; &#123;</span><br><span class="line">            // return response.text();</span><br><span class="line">            return response.json();</span><br><span class="line">        &#125;).then(response =&gt; &#123;</span><br><span class="line">            console.log(response);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="7-跨域"><a href="#7-跨域" class="headerlink" title="7-跨域"></a>7-跨域</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.get(&#x27;/server&#x27;, (request, response) =&gt; &#123;</span><br><span class="line">    //设置响应头</span><br><span class="line">    response.setHeader(&#x27;Access-Control-Allow-Origin&#x27;, &#x27;*&#x27;);//*****</span><br><span class="line">    //设置响应体</span><br><span class="line">    response.send(&#x27;HELLO AJAX -2&#x27;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="bootcdn"><a href="#bootcdn" class="headerlink" title="bootcdn"></a>bootcdn</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BootCDN 是 极兔云 联合 Bootstrap 中文网 共同支持并维护的前端开源项目免费 CDN 服务，致力于为 Bootstrap、jQuery、React、Vue.js 一样优秀的前端开源项目提供稳定、快速的免费 CDN 加速服务。BootCDN 所收录的开源项目主要同步于 cdnjs 开源项目仓库</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>m3u8+idm下载加密视频</title>
      <link href="/2022/09/01/m3u8-idm%E4%B8%8B%E8%BD%BD%E5%8A%A0%E5%AF%86%E8%A7%86%E9%A2%91/"/>
      <url>/2022/09/01/m3u8-idm%E4%B8%8B%E8%BD%BD%E5%8A%A0%E5%AF%86%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<ol><li>通过idm获取m3u8链接</li><li>粘贴链接到<a href="https://www.52pojie.cn/thread-1374045-1-1.html#36979790_%E5%8A%9F%E8%83%BD%E7%89%B9%E8%89%B2">m3u8下载器</a>。</li></ol><span id="more"></span><p> 例子：</p><img src="https://p.qlogo.cn/hy_personal/3e28f14aa0516842df87813ebf2931687e37bba11a805f6bbaa3cc1ad5bce54c/0.png" width="30%"><img src="https://p.qlogo.cn/hy_personal/3e28f14aa0516842df87813ebf2931686ca951a0706f8fa0f2152ab8b76acf30/0.png" width="30%"><img src="https://p.qlogo.cn/hy_personal/3e28f14aa0516842df87813ebf293168f750ff92b8a283c8bb6802511e891877/0.png" width="30%">]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2022/08/22/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/08/22/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>markdown是写博客的必备知识。以下markdown语法按照个人喜好程度排序。本文包括不同等级标题，字体，建立分号线，删除线，下划线，脚注，代码段，链接，图片，列表，区块，表格，转义。</p><h3 id="1-使用‘-’号一级标题，以此类推，最多六级标题"><a href="#1-使用‘-’号一级标题，以此类推，最多六级标题" class="headerlink" title="1.使用‘#’号一级标题，以此类推，最多六级标题"></a>1.使用‘#’号一级标题，以此类推，最多六级标题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h3 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">**粗体文本**</span><br><span class="line">***粗斜体文本***</span><br></pre></td></tr></table></figure><p><em>斜体文本</em><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em></p><span id="more"></span><h3 id="3-三个以上的‘-’建立分割线"><a href="#3-三个以上的‘-’建立分割线" class="headerlink" title="3.三个以上的‘*’建立分割线"></a>3.三个以上的‘*’建立分割线</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***</span><br></pre></td></tr></table></figure><hr><h3 id="4-如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线-即可"><a href="#4-如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线-即可" class="headerlink" title="4.如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可"></a>4.如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <strong>~~</strong> 即可</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~你好~~</span><br></pre></td></tr></table></figure><p><del>你好</del></p><h3 id="5-‘-lt-u’标签实现下划线"><a href="#5-‘-lt-u’标签实现下划线" class="headerlink" title="5. ‘&lt;u’标签实现下划线"></a>5. ‘&lt;u’标签实现下划线</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;带下划线文本&lt;/u&gt;</span><br></pre></td></tr></table></figure><p><u>带下划线文本</u></p><h3 id="6-脚注"><a href="#6-脚注" class="headerlink" title="6.脚注"></a>6.脚注</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要脚注的文本 [^脚注1]。</span><br><span class="line">[^脚注1]: 脚注的内容</span><br></pre></td></tr></table></figure><h3 id="7-用-96-可以把函数或片段包起来"><a href="#7-用-96-可以把函数或片段包起来" class="headerlink" title="7. 用&#96;可以把函数或片段包起来"></a>7. 用&#96;可以把函数或片段包起来</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`pirnt()`函数</span><br></pre></td></tr></table></figure><p><code>print()</code>函数</p><h3 id="8-用-96-96-96-包裹一段代码"><a href="#8-用-96-96-96-包裹一段代码" class="headerlink" title="8. 用 &#96;&#96;&#96; 包裹一段代码"></a>8. 用 <em><strong>&#96;&#96;&#96;</strong></em> 包裹一段代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">for(i=0; i&lt;n; i++)&#123;</span><br><span class="line">        for(j=1; j&lt;n-i; j++)&#123;</span><br><span class="line">            if(a[j-1] &gt; a[j])&#123;        </span><br><span class="line">                int temp;temp = a[j-1];</span><br><span class="line">                a[j-1] = a[j];</span><br><span class="line">                a[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-链接"><a href="#9-链接" class="headerlink" title="9. 链接"></a>9. 链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是我的博客 [zhaoxin-wen的博客](https://zhaoxin-wen.github.io/)</span><br></pre></td></tr></table></figure><p>这是我的博客 <a href="https://zhaoxin-wen.github.io/">zhaoxin-wen的博客</a></p><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这是我的博客[zhoaxin-wen][1]</span><br><span class="line">这是chilijmmm的博客[chilijmmm][2]</span><br><span class="line">[1]: https://zhaoxin-wen.github.io/</span><br><span class="line">[2]: http://chilijmmm.top/</span><br></pre></td></tr></table></figure><p>这是我的博客<a href="https://zhaoxin-wen.github.io/">zhoaxin-wen</a><br>这是chilijmmm的博客<a href="http://chilijmmm.top/">chilijmmm</a></p><h3 id="10-图片"><a href="#10-图片" class="headerlink" title="10.图片"></a>10.图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br><span class="line">![我的头像](https://pic4.zhimg.com/80/v2-f77332502877c2f4575f3ac56c85ea9f_720w.jpg)</span><br><span class="line">![我的头像](https://pic4.zhimg.com/80/v2-f77332502877c2f4575f3ac56c85ea9f_720w.jpg &quot;HeadImg&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://pic4.zhimg.com/80/v2-f77332502877c2f4575f3ac56c85ea9f_720w.jpg" alt="我的头像"></p><p>Markdown 还没有办法指定图片的高度与宽度，推荐使用<code>&lt;img&gt;</code>标签。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;https://pic4.zhimg.com/80/v2-f77332502877c2f4575f3ac56c85ea9f_720w.jpg&quot; width=&quot;30%&quot;&gt;</span><br></pre></td></tr></table></figure><img src="https://pic4.zhimg.com/80/v2-f77332502877c2f4575f3ac56c85ea9f_720w.jpg" width="30%"><h3 id="11-单个-表示无序列表，1-数字-表示有序列表。-列表说明"><a href="#11-单个-表示无序列表，1-数字-表示有序列表。-列表说明" class="headerlink" title="11. 单个*表示无序列表，1.(数字.)表示有序列表。^列表说明"></a>11. 单个<code>*</code>表示无序列表，<code>1.(数字.)</code>表示有序列表。<a href="%60*%60%E5%92%8C%601.%60%E5%90%8E%E9%9D%A2%E8%AE%B8%E5%8A%A0%E7%A9%BA%E6%A0%BC">^列表说明</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br><span class="line">* 第三项</span><br><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br></pre></td></tr></table></figure><h3 id="12-换行是使用两个以上空格加上回车。"><a href="#12-换行是使用两个以上空格加上回车。" class="headerlink" title="12.换行是使用两个以上空格加上回车。"></a>12.<strong>换行是使用两个以上空格加上回车</strong>。</h3><h3 id="13-区块。-gt-符号-，然后后面紧跟一个空格符号："><a href="#13-区块。-gt-符号-，然后后面紧跟一个空格符号：" class="headerlink" title="13. 区块。**&gt;** 符号 ，然后后面紧跟一个空格符号："></a>13. 区块。**&gt;** 符号 ，然后后面紧跟一个<strong>空格</strong>符号：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><p>区块中可以使用列表，列表中也可以使用区块。</p><h3 id="14-表格"><a href="#14-表格" class="headerlink" title="14.表格"></a>14.表格</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略...</span><br></pre></td></tr></table></figure><h3 id="15-高级技巧"><a href="#15-高级技巧" class="headerlink" title="15.高级技巧"></a>15.高级技巧</h3><h4 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h4><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure><h4 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h4><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**文本加粗** </span><br><span class="line">\*\* 正常显示星号 \*\*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure><h4 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h4><p>Markdown Preview Enhanced** 使用 <a href="https://github.com/Khan/KaTeX">KaTeX</a> 或者 <a href="https://github.com/mathjax/MathJax">MathJax</a> 来渲染数学表达式</p><h3 id="参考-：菜鸟教程"><a href="#参考-：菜鸟教程" class="headerlink" title="[参考]：菜鸟教程"></a>[参考]：<a href="https://www.runoob.com/markdown/md-advance.html">菜鸟教程</a></h3>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令及操作</title>
      <link href="/2022/08/22/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/08/22/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>hexo c</p><p>hexo g</p><p>hexo s</p><p>hexo d</p><p>新建md文件，hexo n “文件名” ，例如 hexo n “markdown笔记”</p><p>创建页面，hexo n page 待创建页面名，例如 hexo n page categories。然后进入categories.md文件，在date行下面加入type: “categories”。</p><p>关闭评论区。在文件添加comments: false。</p><p>参考链接：<a href="https://afuya.blog.csdn.net/">Awt_FuDongLai的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
